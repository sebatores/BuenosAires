//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BuenosAires.BodegaBA.WsProductoReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WsProductoReference.IWsProducto")]
    public interface IWsProducto {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWsProducto/Crear", ReplyAction="http://tempuri.org/IWsProducto/CrearResponse")]
        BuenosAires.Model.Respuesta Crear(BuenosAires.Model.Producto producto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWsProducto/Crear", ReplyAction="http://tempuri.org/IWsProducto/CrearResponse")]
        System.Threading.Tasks.Task<BuenosAires.Model.Respuesta> CrearAsync(BuenosAires.Model.Producto producto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWsProducto/LeerTodos", ReplyAction="http://tempuri.org/IWsProducto/LeerTodosResponse")]
        BuenosAires.Model.Respuesta LeerTodos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWsProducto/LeerTodos", ReplyAction="http://tempuri.org/IWsProducto/LeerTodosResponse")]
        System.Threading.Tasks.Task<BuenosAires.Model.Respuesta> LeerTodosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWsProducto/Leer", ReplyAction="http://tempuri.org/IWsProducto/LeerResponse")]
        BuenosAires.Model.Respuesta Leer(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWsProducto/Leer", ReplyAction="http://tempuri.org/IWsProducto/LeerResponse")]
        System.Threading.Tasks.Task<BuenosAires.Model.Respuesta> LeerAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWsProducto/Actualizar", ReplyAction="http://tempuri.org/IWsProducto/ActualizarResponse")]
        BuenosAires.Model.Respuesta Actualizar(BuenosAires.Model.Producto producto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWsProducto/Actualizar", ReplyAction="http://tempuri.org/IWsProducto/ActualizarResponse")]
        System.Threading.Tasks.Task<BuenosAires.Model.Respuesta> ActualizarAsync(BuenosAires.Model.Producto producto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWsProducto/Eliminar", ReplyAction="http://tempuri.org/IWsProducto/EliminarResponse")]
        BuenosAires.Model.Respuesta Eliminar(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWsProducto/Eliminar", ReplyAction="http://tempuri.org/IWsProducto/EliminarResponse")]
        System.Threading.Tasks.Task<BuenosAires.Model.Respuesta> EliminarAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWsProductoChannel : BuenosAires.BodegaBA.WsProductoReference.IWsProducto, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WsProductoClient : System.ServiceModel.ClientBase<BuenosAires.BodegaBA.WsProductoReference.IWsProducto>, BuenosAires.BodegaBA.WsProductoReference.IWsProducto {
        
        public WsProductoClient() {
        }
        
        public WsProductoClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WsProductoClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WsProductoClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WsProductoClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public BuenosAires.Model.Respuesta Crear(BuenosAires.Model.Producto producto) {
            return base.Channel.Crear(producto);
        }
        
        public System.Threading.Tasks.Task<BuenosAires.Model.Respuesta> CrearAsync(BuenosAires.Model.Producto producto) {
            return base.Channel.CrearAsync(producto);
        }
        
        public BuenosAires.Model.Respuesta LeerTodos() {
            return base.Channel.LeerTodos();
        }
        
        public System.Threading.Tasks.Task<BuenosAires.Model.Respuesta> LeerTodosAsync() {
            return base.Channel.LeerTodosAsync();
        }
        
        public BuenosAires.Model.Respuesta Leer(int id) {
            return base.Channel.Leer(id);
        }
        
        public System.Threading.Tasks.Task<BuenosAires.Model.Respuesta> LeerAsync(int id) {
            return base.Channel.LeerAsync(id);
        }
        
        public BuenosAires.Model.Respuesta Actualizar(BuenosAires.Model.Producto producto) {
            return base.Channel.Actualizar(producto);
        }
        
        public System.Threading.Tasks.Task<BuenosAires.Model.Respuesta> ActualizarAsync(BuenosAires.Model.Producto producto) {
            return base.Channel.ActualizarAsync(producto);
        }
        
        public BuenosAires.Model.Respuesta Eliminar(int id) {
            return base.Channel.Eliminar(id);
        }
        
        public System.Threading.Tasks.Task<BuenosAires.Model.Respuesta> EliminarAsync(int id) {
            return base.Channel.EliminarAsync(id);
        }
    }
}
